{"version":3,"sources":["components/body/Countries.js","components/body/Body.js","components/header/Header.js","components/body/Country.js","App.js","reportWebVitals.js","index.js"],"names":["Countries","useState","countries","setCountries","dark","setDark","darkMode","useEffect","document","querySelector","addEventListener","axios","get","then","res","data","catch","err","console","log","countryDisplay","map","country","className","src","flags","svg","alt","name","official","to","pathname","common","state","style","background","color","population","region","capital","latlng","Body","searches","setSearches","setRegion","show","setShow","filter","setFilter","displaySearched","search","displayRegion","clickedRegion","icon","faSearch","type","placeholder","onChange","e","target","value","hidden","Header","props","handleDarkMode","onClick","faMoon","withRouter","useLocation","history","useHistory","goBack","faArrowLeft","marginRight","subregion","continents","timezones","borders","App","basename","forceRefresh","path","component","exact","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"4TAyEeA,MAlEf,WAAsB,IAAD,EACeC,mBAAS,IADxB,mBACZC,EADY,KACDC,EADC,OAEKF,oBAAS,GAFd,mBAEZG,EAFY,KAENC,EAFM,KAGbC,EAAW,WACfD,GAASD,IAGXG,qBAAU,WACSC,SAASC,cAAc,cAE/BC,iBAAiB,QAASJ,MAGrCC,qBAAU,WACRI,IACGC,IAAI,sCACJC,MAAK,SAACC,GACLX,EAAaW,EAAIC,SAGlBC,OAAM,SAACC,GACNC,QAAQC,IAAIF,QAEf,IAQH,IAAMG,EAAiBlB,EAAUmB,KAAI,SAACC,GAAD,OACnC,sBAA0BC,UAAU,UAApC,UACE,qBAAKC,IAAKF,EAAQG,MAAMC,IAAKC,IAAKL,EAAQM,KAAKC,WAE/C,cAAC,IAAD,CACEC,GAAI,CACFC,SAAS,YAAD,OAAcT,EAAQM,KAAKI,QACnCC,MAAO,CAAElB,KAAMO,IAHnB,SAME,sBACEC,UAAU,eACVW,MAAO,CACLC,WAAY/B,EAAO,OAAS,qBAC5BgC,MAAOhC,EAAO,oBAAsB,QAJxC,UAOE,mCAAMkB,EAAQM,KAAKI,OAAnB,OACA,8BACE,+CADF,IAC4BV,EAAQe,cAEpC,8BACE,2CADF,IACwBf,EAAQgB,UAEhC,8BACE,4CADF,IACyBhB,EAAQiB,kBAxB7BjB,EAAQkB,WA+BpB,OAAO,qBAAKjB,UAAU,eAAf,SAA+BH,K,gBCiJzBqB,MAhNf,WAAiB,IAAD,EACkBxC,mBAAS,IAD3B,mBACPyC,EADO,KACGC,EADH,OAEc1C,mBAAS,IAFvB,mBAEPqC,EAFO,KAECM,EAFD,OAGU3C,oBAAS,GAHnB,mBAGP4C,EAHO,KAGDC,EAHC,OAIc7C,oBAAS,GAJvB,mBAIP8C,EAJO,KAICC,EAJD,OAKU/C,oBAAS,GALnB,mBAKPG,EALO,KAKDC,EALC,KAMRC,EAAW,WACfD,GAASD,IAGXG,qBAAU,WAGSC,SAASC,cAAc,cAC/BC,iBAAiB,QAASJ,MAGrC,IA6BM2C,EAAkBP,EAASrB,KAAI,SAAC6B,GAAD,OACnC,sBAAyB3B,UAAU,UAAnC,UACE,qBAAKC,IAAK0B,EAAOzB,MAAMC,IAAKC,IAAKuB,EAAOtB,KAAKC,WAE7C,cAAC,IAAD,CACEC,GAAI,CACFC,SAAS,YAAD,OAAcmB,EAAOtB,KAAKI,QAClCC,MAAO,CAAElB,KAAMmC,IAHnB,SAME,sBACE3B,UAAU,4BACVW,MAAO,CACLC,WAAY/B,EAAO,qBAAuB,OAC1CgC,MAAOhC,EAAO,OAAS,qBAJ3B,UAOE,mCAAM8C,EAAOtB,KAAKI,OAAlB,OACA,8BACE,+CADF,IAC4BkB,EAAOb,cAEnC,8BACE,2CADF,IACwBa,EAAOZ,UAE/B,8BACE,4CADF,IACyBY,EAAOX,kBAxB5BW,EAAOV,WA+BbW,EAAgBb,EAAOjB,KAAI,SAAC+B,GAAD,OAC/B,sBAAgC7B,UAAU,UAA1C,UACE,qBAAKC,IAAK4B,EAAc3B,MAAMC,IAAKC,IAAKyB,EAAcxB,KAAKC,WAE3D,cAAC,IAAD,CACEC,GAAI,CACFC,SAAS,YAAD,OAAcqB,EAAcxB,KAAKI,QACzCC,MAAO,CAAElB,KAAMqC,IAHnB,SAME,sBACE7B,UAAU,4BACVW,MAAO,CACLC,WAAY/B,EAAO,qBAAuB,OAC1CgC,MAAOhC,EAAO,OAAS,qBAJ3B,UAOE,mCAAMgD,EAAcxB,KAAKI,OAAzB,OACA,8BACE,+CADF,IAC4BoB,EAAcf,cAE1C,8BACE,2CADF,IACwBe,EAAcd,UAEtC,8BACE,4CADF,IACyBc,EAAcb,kBAxBnCa,EAAcZ,WA+B1B,OACE,sBACEN,MAAO,CACLC,WAAY/B,EAAO,qBAAuB,mBAE5CmB,UAAU,eAJZ,UAME,sBAAKA,UAAU,gBAAf,UACE,sBACEA,UAAU,SACVW,MAAO,CAAEE,MAAOhC,EAAO,OAAS,qBAFlC,UAIE,cAAC,IAAD,CAAiBiD,KAAMC,IAAU/B,UAAU,gBAC3C,uBACEgC,KAAK,SACLC,YAAY,0BACZC,SA7GO,SAACC,GAChBZ,GAAQ,GACRnC,IACGC,IADH,8CAC8C8C,EAAEC,OAAOC,QACpD/C,MAAK,SAACC,GACL6B,EAAY7B,EAAIC,SAEG,KAAnB2C,EAAEC,OAAOC,QACXjB,EAAY,IACZG,GAAQ,KAqGFZ,MAAO,CACLC,WAAY/B,EAAO,qBAAuB,QAE5CmB,UAAWnB,EAAO,WAAa,kBAInC,yBACEwB,KAAK,YACLL,UAAU,SACVW,MAAO,CACLC,WAAY/B,EAAO,qBAAuB,OAC1CgC,MAAOhC,EAAO,OAAS,SAEzBqD,SA/Ga,SAACC,GACpBxC,QAAQC,IAAIuC,EAAEC,OAAOC,OACrBZ,GAAU,GACVrC,IACGC,IADH,gDACgD8C,EAAEC,OAAOC,QACtD/C,MAAK,SAACC,GACLI,QAAQC,IAAIL,EAAIC,MAChB6B,EAAU9B,EAAIC,SAEK,SAAnB2C,EAAEC,OAAOC,QACXjB,EAAY,IACZK,GAAU,KA6FR,UASE,wBAAQa,QAAM,EAAd,8BACA,wBACED,MAAM,OACN1B,MAAO,CACLC,WAAY/B,EAAO,qBAAuB,OAC1CgC,MAAOhC,EAAO,OAAS,SAJ3B,kBASA,wBACEwD,MAAM,SACN1B,MAAO,CACLC,WAAY/B,EAAO,qBAAuB,OAC1CgC,MAAOhC,EAAO,OAAS,SAJ3B,oBASA,wBACEwD,MAAM,WACN1B,MAAO,CACLC,WAAY/B,EAAO,qBAAuB,OAC1CgC,MAAOhC,EAAO,OAAS,SAJ3B,qBASA,wBACEwD,MAAM,OACN1B,MAAO,CACLC,WAAY/B,EAAO,qBAAuB,OAC1CgC,MAAOhC,EAAO,OAAS,SAJ3B,kBASA,wBACEwD,MAAM,SACN1B,MAAO,CACLC,WAAY/B,EAAO,qBAAuB,OAC1CgC,MAAOhC,EAAO,OAAS,SAJ3B,oBASA,wBACEwD,MAAM,UACN1B,MAAO,CACLC,WAAY/B,EAAO,qBAAuB,OAC1CgC,MAAOhC,EAAO,OAAS,SAJ3B,2BAYHyC,GAAQ,qBAAKtB,UAAU,UAAf,SAA0B0B,IAClCF,GAAU,qBAAKxB,UAAU,UAAf,SAA0B4B,IACnCN,GAASE,EAAyB,KAAhB,cAAC,EAAD,Q,MCzLXe,MArBf,SAAgBC,GAAQ,IACdC,EAAyBD,EAAzBC,eAAgB5D,EAAS2D,EAAT3D,KAExB,OACE,wBAAQ8B,MAAO,CAAEC,WAAY/B,EAAO,qBAAuB,QAA3D,SACE,sBACE8B,MAAO,CACLC,WAAY/B,EAAO,qBAAuB,OAC1CgC,MAAOhC,EAAO,OAAS,qBAH3B,UAME,qDACA,sBAAKmB,UAAU,YAAY0C,QAASD,EAApC,UACE,cAAC,IAAD,CAAiBX,KAAMa,MACvB,oD,OCsEKC,mBAhFf,YAA4B,IAAT/D,EAAQ,EAARA,KAETW,EADSqD,cACSnC,MAAlBlB,KACFsD,EAAUC,cAEhB,OACE,qBACE/C,UAAU,eACVW,MAAO,CACLC,WAAY/B,EAAO,qBAAuB,mBAH9C,SAME,sBAAKmB,UAAU,iBAAf,UACE,cAAC,IAAD,CAAMO,GAAG,IAAT,SACE,oBACEmC,QAASI,EAAQE,OACjBhD,UAAU,MACVW,MAAO,CACLC,WAAY/B,EAAO,qBAAuB,OAC1CgC,MAAOhC,EAAO,OAAS,sBAL3B,UAQE,cAAC,IAAD,CACEiD,KAAMmB,IACNtC,MAAO,CAAEuC,YAAa,UAV1B,YAgBF,sBAAKlD,UAAU,UAAUW,MAAO,CAAEE,MAAOhC,EAAO,QAAU,SAA1D,UACE,qBAAKmB,UAAU,OAAf,SACE,qBAAKC,IAAKT,EAAKU,MAAMC,IAAKC,IAAKZ,EAAKa,KAAKC,aAG3C,sBAAKN,UAAU,iBAAf,UACE,6BAAKR,EAAKa,KAAKI,SAEf,sBAAKT,UAAU,SAAf,UACE,sBAAKA,UAAU,QAAf,UACE,gDACiB,+BAAOR,EAAKa,KAAKC,cAElC,6CACc,+BAAOd,EAAKsB,gBAE1B,yCACU,+BAAOtB,EAAKuB,YAEtB,6CACc,+BAAOvB,EAAK2D,eAE1B,0CACW,+BAAO3D,EAAKwB,QAAQ,WAIjC,sBAAKhB,UAAU,MAAf,UACE,4CACa,+BAAOR,EAAK4D,WAAW,QAEpC,6CACc,4BAEd,2CACY,+BAAO5D,EAAK6D,UAAU,cAKtC,qBAAKrD,UAAU,QAAf,SACE,0CAAaR,EAAK8D,2BCtDjBC,MAlBf,WAAgB,IAAD,EACW7E,oBAAS,GADpB,mBACNG,EADM,KACAC,EADA,KAMb,OACE,cAAC,IAAD,CAAe0E,SAAS,IAAIC,cAAY,EAAxC,SACE,sBAAKzD,UAAS,cAASnB,EAAO,OAAS,KAAzB,KAAd,UACE,cAAC,EAAD,CAAQ4D,eAPG,WACf3D,GAASD,IAM6BA,KAAMA,IAExC,cAAC,IAAD,CAAO6E,KAAK,IAAIC,UAAWzC,EAAM0C,OAAK,IACtC,cAAC,IAAD,CAAOF,KAAK,WAAWG,OAAQ,kBAAM,cAAC,EAAD,CAAShF,KAAMA,aCP7CiF,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1E,MAAK,YAAkD,IAA/C2E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAAST,OACP,cAAC,IAAMU,WAAP,UACE,cAAC,EAAD,MAEFtF,SAASuF,eAAe,SAM1BV,M","file":"static/js/main.fe55b117.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport \"./Body.css\";\r\n// import Country from \"./Country\";\r\n\r\nfunction Countries() {\r\n  const [countries, setCountries] = useState([]);\r\n  const [dark, setDark] = useState(true);\r\n  const darkMode = () => {\r\n    setDark(!dark);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const darkIcon = document.querySelector(\".dark-mode\");\r\n\r\n    darkIcon.addEventListener(\"click\", darkMode);\r\n  });\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://restcountries.com/v3.1/all\")\r\n      .then((res) => {\r\n        setCountries(res.data);\r\n        // console.log(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  // const flags = countries.map((country) => (\r\n  //   <div key={country.latlng}>\r\n  //     <img src={country.flags.png} alt=\"yeah\" />\r\n  //   </div>\r\n  // ));\r\n\r\n  const countryDisplay = countries.map((country) => (\r\n    <div key={country.latlng} className=\"country\">\r\n      <img src={country.flags.svg} alt={country.name.official} />\r\n\r\n      <Link\r\n        to={{\r\n          pathname: `/country/${country.name.common}`,\r\n          state: { data: country },\r\n        }}\r\n      >\r\n        <div\r\n          className=\"country-info\"\r\n          style={{\r\n            background: dark ? \"#fff\" : \"hsl(209, 23%, 22%)\",\r\n            color: dark ? \"hsl(200, 15%, 8%)\" : \"#fff\",\r\n          }}\r\n        >\r\n          <h3> {country.name.common} </h3>\r\n          <p>\r\n            <span>Population:</span> {country.population}\r\n          </p>\r\n          <p>\r\n            <span>Region:</span> {country.region}\r\n          </p>\r\n          <p>\r\n            <span>Capital:</span> {country.capital}\r\n          </p>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  ));\r\n\r\n  return <div className=\"country-grid\">{countryDisplay}</div>;\r\n}\r\n\r\nexport default Countries;\r\n","import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Countries from \"./Countries\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Body() {\r\n  const [searches, setSearches] = useState([]);\r\n  const [region, setRegion] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n  const [filter, setFilter] = useState(false);\r\n  const [dark, setDark] = useState(false);\r\n  const darkMode = () => {\r\n    setDark(!dark);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // To target some elements on the DOM\r\n    // to target the dark mode properties\r\n    const darkIcon = document.querySelector(\".dark-mode\");\r\n    darkIcon.addEventListener(\"click\", darkMode);\r\n  });\r\n\r\n  const onSearch = (e) => {\r\n    setShow(true);\r\n    axios\r\n      .get(`https://restcountries.com/v3.1/name/${e.target.value}`)\r\n      .then((res) => {\r\n        setSearches(res.data);\r\n      });\r\n    if (e.target.value === \"\") {\r\n      setSearches([]);\r\n      setShow(false);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    console.log(e.target.value);\r\n    setFilter(true);\r\n    axios\r\n      .get(`https://restcountries.com/v3.1/region/${e.target.value}`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setRegion(res.data);\r\n      });\r\n    if (e.target.value === \"none\") {\r\n      setSearches([]);\r\n      setFilter(false);\r\n    }\r\n    // .catch(() => setRegion([]));\r\n  };\r\n\r\n  const displaySearched = searches.map((search) => (\r\n    <div key={search.latlng} className=\"country\">\r\n      <img src={search.flags.svg} alt={search.name.official} />\r\n\r\n      <Link\r\n        to={{\r\n          pathname: `/country/${search.name.common}`,\r\n          state: { data: search },\r\n        }}\r\n      >\r\n        <div\r\n          className=\"country-info display-info\"\r\n          style={{\r\n            background: dark ? \"hsl(209, 23%, 22%)\" : \"#fff\",\r\n            color: dark ? \"#fff\" : \"hsl(200, 15%, 8%)\",\r\n          }}\r\n        >\r\n          <h3> {search.name.common} </h3>\r\n          <p>\r\n            <span>Population:</span> {search.population}\r\n          </p>\r\n          <p>\r\n            <span>Region:</span> {search.region}\r\n          </p>\r\n          <p>\r\n            <span>Capital:</span> {search.capital}\r\n          </p>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  ));\r\n\r\n  const displayRegion = region.map((clickedRegion) => (\r\n    <div key={clickedRegion.latlng} className=\"country\">\r\n      <img src={clickedRegion.flags.svg} alt={clickedRegion.name.official} />\r\n\r\n      <Link\r\n        to={{\r\n          pathname: `/country/${clickedRegion.name.common}`,\r\n          state: { data: clickedRegion },\r\n        }}\r\n      >\r\n        <div\r\n          className=\"country-info display-info\"\r\n          style={{\r\n            background: dark ? \"hsl(209, 23%, 22%)\" : \"#fff\",\r\n            color: dark ? \"#fff\" : \"hsl(200, 15%, 8%)\",\r\n          }}\r\n        >\r\n          <h3> {clickedRegion.name.common} </h3>\r\n          <p>\r\n            <span>Population:</span> {clickedRegion.population}\r\n          </p>\r\n          <p>\r\n            <span>Region:</span> {clickedRegion.region}\r\n          </p>\r\n          <p>\r\n            <span>Capital:</span> {clickedRegion.capital}\r\n          </p>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        background: dark ? \"hsl(207, 26%, 17%)\" : \"hsl(0, 0%, 98%)\",\r\n      }}\r\n      className=\"main-content\"\r\n    >\r\n      <div className=\"search-filter\">\r\n        <div\r\n          className=\"search\"\r\n          style={{ color: dark ? \"#fff\" : \"hsl(200, 15%, 8%)\" }}\r\n        >\r\n          <FontAwesomeIcon icon={faSearch} className=\"search-icon\" />\r\n          <input\r\n            type=\"search\"\r\n            placeholder=\"Search for a country...\"\r\n            onChange={onSearch}\r\n            style={{\r\n              background: dark ? \"hsl(209, 23%, 22%)\" : \"#fff\",\r\n            }}\r\n            className={dark ? \"lg-color\" : \"dark-color\"}\r\n          />\r\n        </div>\r\n\r\n        <select\r\n          name=\"countries\"\r\n          className=\"filter\"\r\n          style={{\r\n            background: dark ? \"hsl(209, 23%, 22%)\" : \"#fff\",\r\n            color: dark ? \"#fff\" : \"black\",\r\n          }}\r\n          onChange={handleChange}\r\n        >\r\n          <option hidden>Filter by Region</option>\r\n          <option\r\n            value=\"none\"\r\n            style={{\r\n              background: dark ? \"hsl(209, 23%, 22%)\" : \"#fff\",\r\n              color: dark ? \"#fff\" : \"black\",\r\n            }}\r\n          >\r\n            None\r\n          </option>\r\n          <option\r\n            value=\"africa\"\r\n            style={{\r\n              background: dark ? \"hsl(209, 23%, 22%)\" : \"#fff\",\r\n              color: dark ? \"#fff\" : \"black\",\r\n            }}\r\n          >\r\n            Africa\r\n          </option>\r\n          <option\r\n            value=\"americas\"\r\n            style={{\r\n              background: dark ? \"hsl(209, 23%, 22%)\" : \"#fff\",\r\n              color: dark ? \"#fff\" : \"black\",\r\n            }}\r\n          >\r\n            America\r\n          </option>\r\n          <option\r\n            value=\"asia\"\r\n            style={{\r\n              background: dark ? \"hsl(209, 23%, 22%)\" : \"#fff\",\r\n              color: dark ? \"#fff\" : \"black\",\r\n            }}\r\n          >\r\n            Asia\r\n          </option>\r\n          <option\r\n            value=\"europe\"\r\n            style={{\r\n              background: dark ? \"hsl(209, 23%, 22%)\" : \"#fff\",\r\n              color: dark ? \"#fff\" : \"black\",\r\n            }}\r\n          >\r\n            Europe\r\n          </option>\r\n          <option\r\n            value=\"oceania\"\r\n            style={{\r\n              background: dark ? \"hsl(209, 23%, 22%)\" : \"#fff\",\r\n              color: dark ? \"#fff\" : \"black\",\r\n            }}\r\n          >\r\n            Oceania\r\n          </option>\r\n        </select>\r\n      </div>\r\n\r\n      {show && <div className=\"display\">{displaySearched}</div>}\r\n      {filter && <div className=\"display\">{displayRegion}</div>}\r\n      {!show && !filter ? <Countries /> : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Body;\r\n","import \"./Header.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMoon } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Header(props) {\r\n  const { handleDarkMode, dark } = props;\r\n\r\n  return (\r\n    <header style={{ background: dark ? \"hsl(209, 23%, 22%)\" : \"#fff\" }}>\r\n      <nav\r\n        style={{\r\n          background: dark ? \"hsl(209, 23%, 22%)\" : \"#fff\",\r\n          color: dark ? \"#fff\" : \"hsl(200, 15%, 8%)\",\r\n        }}\r\n      >\r\n        <h2>Where in the world?</h2>\r\n        <div className=\"dark-mode\" onClick={handleDarkMode}>\r\n          <FontAwesomeIcon icon={faMoon} />\r\n          <h4>Dark Mode</h4>\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./Body.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Country({ dark }) {\r\n  const location = useLocation();\r\n  const { data } = location.state;\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div\r\n      className=\"main-content\"\r\n      style={{\r\n        background: dark ? \"hsl(207, 26%, 17%)\" : \"hsl(0, 0%, 98%)\",\r\n      }}\r\n    >\r\n      <div className=\"single-content\">\r\n        <Link to=\"/\">\r\n          <p\r\n            onClick={history.goBack}\r\n            className=\"btn\"\r\n            style={{\r\n              background: dark ? \"hsl(209, 23%, 22%)\" : \"#fff\",\r\n              color: dark ? \"#fff\" : \"hsl(209, 23%, 22%)\",\r\n            }}\r\n          >\r\n            <FontAwesomeIcon\r\n              icon={faArrowLeft}\r\n              style={{ marginRight: \"10px\" }}\r\n            />\r\n            Back\r\n          </p>\r\n        </Link>\r\n\r\n        <div className=\"details\" style={{ color: dark ? \"white\" : \"black\" }}>\r\n          <div className=\"flag\">\r\n            <img src={data.flags.svg} alt={data.name.official} />\r\n          </div>\r\n\r\n          <div className=\"country-detail\">\r\n            <h1>{data.name.common}</h1>\r\n\r\n            <div className=\"others\">\r\n              <div className=\"first\">\r\n                <p>\r\n                  Official name: <span>{data.name.official}</span>\r\n                </p>\r\n                <p>\r\n                  Population: <span>{data.population}</span>\r\n                </p>\r\n                <p>\r\n                  Region: <span>{data.region}</span>\r\n                </p>\r\n                <p>\r\n                  Sub Region: <span>{data.subregion}</span>\r\n                </p>\r\n                <p>\r\n                  Capital: <span>{data.capital[0]}</span>\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"two\">\r\n                <p>\r\n                  Continent: <span>{data.continents[0]}</span>\r\n                </p>\r\n                <p>\r\n                  Currencies: <span></span>\r\n                </p>\r\n                <p>\r\n                  Timezone: <span>{data.timezones[0]}</span>\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"third\">\r\n              <p>Borders: {data.borders}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Country);\r\n","import \"./App.css\";\nimport React, { useState } from \"react\";\nimport Body from \"./components/body/Body\";\nimport Header from \"./components/header/Header\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Country from \"./components/body/Country\";\n\nfunction App() {\n  const [dark, setDark] = useState(false);\n  const darkMode = () => {\n    setDark(!dark);\n  };\n\n  return (\n    <BrowserRouter basename=\"/\" forceRefresh>\n      <div className={`App ${dark ? \"dark\" : null} `}>\n        <Header handleDarkMode={darkMode} dark={dark} />\n\n        <Route path=\"/\" component={Body} exact />\n        <Route path=\"/country\" render={() => <Country dark={dark} />} />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}